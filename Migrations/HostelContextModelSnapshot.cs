// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Novo_Hotel.Models;

#nullable disable

namespace novo_hotel.Migrations
{
    [DbContext(typeof(Novo_HotelContext))]
    partial class HostelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Novo_Hotel.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EnderecoID")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Nome")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("ClienteID");

                    b.HasIndex("EnderecoID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Novo_Hotel.Conta", b =>
                {
                    b.Property<int>("ContaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContaID"));

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<int?>("LavanderiaID")
                        .HasColumnType("int");

                    b.Property<int?>("ReservaID")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("fk_Reservas_IdReserva")
                        .HasColumnType("int");

                    b.HasKey("ContaID");

                    b.HasIndex("ItemID");

                    b.HasIndex("LavanderiaID");

                    b.HasIndex("ReservaID");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("Novo_Hotel.Endereco", b =>
                {
                    b.Property<int>("EnderecoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoID"));

                    b.Property<string>("Cidade")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Estado")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Rua")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("EnderecoID");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Novo_Hotel.Filial", b =>
                {
                    b.Property<int>("FilialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilialID"));

                    b.Property<int>("EnderecoID")
                        .HasColumnType("int");

                    b.Property<string>("NomeFilial")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("NumeroQuartos")
                        .HasColumnType("int");

                    b.Property<int>("QtdEstrelas")
                        .HasColumnType("int");

                    b.Property<int>("fk_Endereco_IdEndereco")
                        .HasColumnType("int");

                    b.HasKey("FilialID");

                    b.HasIndex("EnderecoID");

                    b.ToTable("Filiais");
                });

            modelBuilder.Entity("Novo_Hotel.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionarioID"));

                    b.Property<int?>("FilialID")
                        .HasColumnType("int");

                    b.Property<string>("NomeFuncionario")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("TipoFuncionarioID")
                        .HasColumnType("int");

                    b.Property<int>("fk_Filiais_IdFilial")
                        .HasColumnType("int");

                    b.Property<int>("fk_TipoFuncionario_IdTipoFuncionario")
                        .HasColumnType("int");

                    b.HasKey("FuncionarioID");

                    b.HasIndex("FilialID");

                    b.HasIndex("TipoFuncionarioID");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Novo_Hotel.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<string>("DescricaoItem")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("Entrega")
                        .HasColumnType("bit");

                    b.Property<int>("ValorItem")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("Novo_Hotel.ItemConsumido", b =>
                {
                    b.Property<int>("ItemConsumidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemConsumidoId"));

                    b.Property<int?>("ContaID")
                        .HasColumnType("int");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("fk_Conta_Conta")
                        .HasColumnType("int");

                    b.HasKey("ItemConsumidoId");

                    b.HasIndex("ContaID");

                    b.HasIndex("ItemID");

                    b.ToTable("ItensConsumidos");
                });

            modelBuilder.Entity("Novo_Hotel.Lavanderia", b =>
                {
                    b.Property<int>("LavanderiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LavanderiaID"));

                    b.Property<string>("DescricaoServico")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("ValorServico")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LavanderiaID");

                    b.ToTable("Lavanderias");
                });

            modelBuilder.Entity("Novo_Hotel.Pagamento", b =>
                {
                    b.Property<int>("PagamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagamentoID"));

                    b.Property<DateTime>("Codigo_TipoPagamento_")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ContaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_NotaFiscal_")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TipoPagamentoID")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal_NotaFiscal_")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("fk_Conta_IdConta")
                        .HasColumnType("int");

                    b.Property<int>("fk_TipoPagamento_IdTipoPagamento")
                        .HasColumnType("int");

                    b.HasKey("PagamentoID");

                    b.HasIndex("ContaID");

                    b.HasIndex("TipoPagamentoID");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("Novo_Hotel.Quarto", b =>
                {
                    b.Property<int>("QuartoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuartoID"));

                    b.Property<bool>("Adaptavel")
                        .HasColumnType("bit");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int");

                    b.Property<bool>("CapacidadeOpcional")
                        .HasColumnType("bit");

                    b.Property<int?>("FilialID")
                        .HasColumnType("int");

                    b.Property<int?>("ReservaID")
                        .HasColumnType("int");

                    b.Property<int?>("TipoQuartoID")
                        .HasColumnType("int");

                    b.Property<int>("fk_Filiais_IdFilial")
                        .HasColumnType("int");

                    b.Property<int?>("fk_Reservas_IdReserva")
                        .HasColumnType("int");

                    b.Property<int>("fk_TiposQuarto_IdQuarto")
                        .HasColumnType("int");

                    b.HasKey("QuartoID");

                    b.HasIndex("FilialID");

                    b.HasIndex("ReservaID");

                    b.HasIndex("TipoQuartoID");

                    b.ToTable("Quartos");
                });

            modelBuilder.Entity("Novo_Hotel.Reserva", b =>
                {
                    b.Property<int>("ReservaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaID"));

                    b.Property<bool>("Cancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioID")
                        .HasColumnType("int");

                    b.Property<int>("NumPessoas")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("fk_Clientes_IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("fk_Funcionarios_IdFuncionario")
                        .HasColumnType("int");

                    b.HasKey("ReservaID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("FuncionarioID");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Novo_Hotel.ServicoLavanderia", b =>
                {
                    b.Property<int>("ServicoLavanderiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicoLavanderiaID"));

                    b.Property<int?>("ContaID")
                        .HasColumnType("int");

                    b.Property<int?>("LavanderiaID")
                        .HasColumnType("int");

                    b.Property<int>("fk_Conta_IdConta")
                        .HasColumnType("int");

                    b.HasKey("ServicoLavanderiaID");

                    b.HasIndex("ContaID");

                    b.HasIndex("LavanderiaID");

                    b.ToTable("ServicosLavanderia");
                });

            modelBuilder.Entity("Novo_Hotel.TipoFuncionario", b =>
                {
                    b.Property<int>("TipoFuncionarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoFuncionarioID"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("TipoFuncionarioID");

                    b.ToTable("TiposFuncionario");
                });

            modelBuilder.Entity("Novo_Hotel.TipoPagamento", b =>
                {
                    b.Property<int>("TipoPagamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoPagamentoID"));

                    b.Property<string>("DescricaoTipoPag")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("TipoPagamentoID");

                    b.ToTable("TiposPaTipoPagamento");
                });

            modelBuilder.Entity("Novo_Hotel.TipoQuarto", b =>
                {
                    b.Property<int>("TipoQuartoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoQuartoID"));

                    b.Property<string>("DescricaoQuarto")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("ValorQuarto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TipoQuartoID");

                    b.ToTable("TiposQuarto");
                });

            modelBuilder.Entity("Novo_Hotel.Cliente", b =>
                {
                    b.HasOne("Novo_Hotel.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoID");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Novo_Hotel.Conta", b =>
                {
                    b.HasOne("Novo_Hotel.Item", null)
                        .WithMany("Contas")
                        .HasForeignKey("ItemID");

                    b.HasOne("Novo_Hotel.Lavanderia", null)
                        .WithMany("Contas")
                        .HasForeignKey("LavanderiaID");

                    b.HasOne("Novo_Hotel.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaID");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Novo_Hotel.Filial", b =>
                {
                    b.HasOne("Novo_Hotel.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Novo_Hotel.Funcionario", b =>
                {
                    b.HasOne("Novo_Hotel.Filial", "Filial")
                        .WithMany("Funcionarios")
                        .HasForeignKey("FilialID");

                    b.HasOne("Novo_Hotel.TipoFuncionario", "TipoFuncionario")
                        .WithMany("Funcionarios")
                        .HasForeignKey("TipoFuncionarioID");

                    b.Navigation("Filial");

                    b.Navigation("TipoFuncionario");
                });

            modelBuilder.Entity("Novo_Hotel.ItemConsumido", b =>
                {
                    b.HasOne("Novo_Hotel.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaID");

                    b.HasOne("Novo_Hotel.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID");

                    b.Navigation("Conta");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Novo_Hotel.Pagamento", b =>
                {
                    b.HasOne("Novo_Hotel.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaID");

                    b.HasOne("Novo_Hotel.TipoPagamento", "TipoPagamento")
                        .WithMany("Pagamentos")
                        .HasForeignKey("TipoPagamentoID");

                    b.Navigation("Conta");

                    b.Navigation("TipoPagamento");
                });

            modelBuilder.Entity("Novo_Hotel.Quarto", b =>
                {
                    b.HasOne("Novo_Hotel.Filial", "Filial")
                        .WithMany("Quartos")
                        .HasForeignKey("FilialID");

                    b.HasOne("Novo_Hotel.Reserva", "Reserva")
                        .WithMany("Quartos")
                        .HasForeignKey("ReservaID");

                    b.HasOne("Novo_Hotel.TipoQuarto", "TipoQuarto")
                        .WithMany("Quartos")
                        .HasForeignKey("TipoQuartoID");

                    b.Navigation("Filial");

                    b.Navigation("Reserva");

                    b.Navigation("TipoQuarto");
                });

            modelBuilder.Entity("Novo_Hotel.Reserva", b =>
                {
                    b.HasOne("Novo_Hotel.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteID");

                    b.HasOne("Novo_Hotel.Funcionario", "Funcionario")
                        .WithMany("Reservas")
                        .HasForeignKey("FuncionarioID");

                    b.Navigation("Cliente");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Novo_Hotel.ServicoLavanderia", b =>
                {
                    b.HasOne("Novo_Hotel.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaID");

                    b.HasOne("Novo_Hotel.Lavanderia", "Lavanderia")
                        .WithMany()
                        .HasForeignKey("LavanderiaID");

                    b.Navigation("Conta");

                    b.Navigation("Lavanderia");
                });

            modelBuilder.Entity("Novo_Hotel.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Novo_Hotel.Filial", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("Quartos");
                });

            modelBuilder.Entity("Novo_Hotel.Funcionario", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Novo_Hotel.Item", b =>
                {
                    b.Navigation("Contas");
                });

            modelBuilder.Entity("Novo_Hotel.Lavanderia", b =>
                {
                    b.Navigation("Contas");
                });

            modelBuilder.Entity("Novo_Hotel.Reserva", b =>
                {
                    b.Navigation("Quartos");
                });

            modelBuilder.Entity("Novo_Hotel.TipoFuncionario", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("Novo_Hotel.TipoPagamento", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("Novo_Hotel.TipoQuarto", b =>
                {
                    b.Navigation("Quartos");
                });
#pragma warning restore 612, 618
        }
    }
}
